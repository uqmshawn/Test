[tool.black]
exclude = '(migrations/|alembic/|env\.py)'

[tool.pylint.master]
ignore = ["migrations", "CVS", "__pycache__"]
ignore-patterns = [".*\\.py"]
# Don't analyze fallback blocks which might lead to false positives
analyse-fallback-blocks = "no"
# Ignore migrations directory completely
ignore-paths = ["^migrations/.*$", "^alembic/.*$", "^env\\.py$"]
# Ignore all migration files
ignore-modules = ["migrations.*", "alembic.*"]

[tool.pylint.messages_control]
disable = [
    "C0103",  # invalid-name (mostly for migration files and test fixtures)
    "R0903",  # too-few-public-methods (SQLAlchemy models often have few methods)
    "W0212",  # protected-access (tests often need to access protected members)
    "W0613",  # unused-argument (common in test fixtures with dependency injection)
    "W0621",  # redefined-outer-name (common in pytest fixtures)
    "E1101",  # no-member (alembic imports)
    "R0801",  # duplicate-code (common in migrations)
    "C1803",  # use-implicit-booleaness-not-comparison
    "C0114",  # missing-module-docstring (consider enabling this later)
    "C0115",  # missing-class-docstring (consider enabling this later)
    "C0116",  # missing-function-docstring (consider enabling this later)
    "W0718",  # broad-exception-caught
    "C0301",  # line-too-long (handled by black)
    "C0411",  # wrong-import-order (in tests)
    "W0611",  # unused-import (in tests)
    "R0913",  # too-many-arguments
    "W0719",  # broad-exception-raised
    "C0413",  # wrong-import-position (in tests)
    "C0415",  # import-outside-toplevel (in tests)
    "R0914",  # too-many-locals
    "R0912",  # too-many-branches
    "R0915",  # too-many-statements
    "R0902",  # too-many-instance-attributes
    "R0904",  # too-many-public-methods
    "R0911",  # too-many-return-statements
    "R0201",  # method-could-be-function
    "W0703",  # broad-except
]

[tool.pylint.format]
max-line-length = 100
# Regexp for lines that are allowed to be longer than the limit
ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"

[tool.pylint.typecheck]
ignored-modules = ["alembic"]
ignored-classes = ["optparse.Values", "thread._local", "_thread._local", "argparse.Namespace"]

[tool.pylint.similarities]
min-similarity-lines = 10
ignore-imports = "yes"
ignore-comments = "yes"
ignore-docstrings = "yes"

[tool.pylint.design]
max-args = 6
max-attributes = 10
max-locals = 20
max-statements = 60
max-returns = 8

[tool.pylint.imports]
allow-wildcard-with-all = "yes"

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "db", "id", "f", "e"]

[tool.pylint.exceptions]
overgeneral-exceptions = ["builtins.BaseException"]

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
ignore_missing_imports = true
disallow_subclassing_any = false
disallow_any_generics = false
disallow_untyped_calls = false
disallow_untyped_decorators = false
disallow_any_explicit = false
disallow_any_unimported = false
check_untyped_defs = false
strict_optional = false
follow_imports = "skip"

# Ignore all errors for now
[[tool.mypy.overrides]]
module = "*"
ignore_errors = true

# Ignore missing imports for specific modules
[[tool.mypy.overrides]]
module = "geopy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "sqlalchemy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "paho.*"
ignore_missing_imports = true